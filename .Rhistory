install.packages("KernSmooth")
library("KernSmooth", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("swirl")
swirl()
x
x[1:10]
x[is.na(x))]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x >0]
c(x[3], x[5], x[7])
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
x <- c(4, "a", TRUE)
class(x)
x <- c(1:3)
y <- c(4:5)
cbind(x,y)
y <- c(4:6)
cbind(x,y)
z <- cbind(x,y)
class(z)
View(z)
x <- list(2, "a", "b", TRUE)
x[[1]]
x[1]
y <- x[[1]]
class(y)
z <- x[1]
class(z)
data <- read.csv("hw1_data.csv")
library(xlsx)
source('~/.active-rstudio-document')
dat <- read.xlsx("NatGas.xlsx", startRow=18, endRow=23, colIndex=c(7, 15))
dat <- read.xlsx("NatGas.xlsx", sheetIndex=1, startRow=18, endRow=23, colIndex=c(7, 15))
dat
dat <- read.xlsx("NatGas.xlsx", sheetIndex=1, startRow=18, endRow=24, colIndex=(7:15))
dat
dat <- read.xlsx("NatGas.xlsx", sheetIndex=1, startRow=18, endRow=23, colIndex=(7:15))
dat <- read.xlsx("NatGas.xlsx", sheetIndex=1, startRow=18, endRow=29, colIndex=(7:15))
dat <- read.xlsx("NatGas.xlsx", sheetIndex=1, startRow=18, endRow=24, colIndex=(7:15))
dat <- read.xlsx("NatGas.xlsx", sheetIndex=1, startRow=18, endRow=23, colIndex=(7:15))
dat <- read.xlsx("NatGas.xlsx", sheetIndex=1, startRow=17, endRow=23, colIndex=(7:15))
dat <- read.xlsx("NatGas.xlsx", sheetIndex=1, startRow=10, endRow=23, colIndex=(7:15))
dat <- read.xlsx("NatGas.xlsx", sheetIndex=1, startRow=18, endRow=23, colIndex=(7:15))
sum(dat$Zip*dat$Ext,na.rm=T)
source('~/.active-rstudio-document')
install.packages("XML")
doc <- xmlTreeParse(url3, useInternal=TRUE)
doc <- xmlTreeParse(url3, useInternal=TRUE)
library(XML)
doc <- xmlTreeParse(url3, useInternal=TRUE)
doc <- xmlTreeParse("BaltimoreResto.XML", useInternal=TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
rootNode[1]
rootNode[[1]]
zip <- xpathSApply(rootNode, "//zipcode", xmlValue)
21231 <- zip == 21231
21231 <- zip == "21231"
zipquiz <- zip == "21231"
sum(zipquiz)
source('~/.active-rstudio-document')
install.packages("data.table")
library(data.table)
DT <- fread("ACS.csv")
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
mean(DT$pwgtp15,by=DT$SEX)
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
DT[,mean(pwgtp15),by=SEX]
tapply(DT$pwgtp15,DT$SEX,mean)
mean(DT$pwgtp15,by=DT$SEX)
sapply(split(DT$pwgtp15,DT$SEX),mean)
mean(c(8,9,10,11,12))
var(c(8,9,10,11,12))
sd(c(8,9,10,11,12))
t.test(c(8,9,10,11,12))
t.test(c(8,9,10,11,12), y=8)
R.version.string
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
evaluate(function(x){x+1})
q()
setwd("~/Desktop/Data Science/Data Science Coursera /RepResearch/RepData_PeerAssessment1")
?read.csv
data <- read.csv("activity.csv")
View(data)
str(data)
mean(data$interval)
summary(data)
unique(data$date)
dates <- unique(data$date)
sum(data$steps)
sum(data$steps, na.rm=TRUE)
sum(data$steps[where(data$date=="2012-10-25")], na.rm=TRUE)
sum(data$steps[which(data$date=="2012-10-25")], na.rm=TRUE)
StepsPerDay <- NULL
for (x in dates) {
sum(data$steps[which(data$date==x)], na.rm=TRUE)
}
for (x in dates) {
total <- sum(data$steps[which(data$date==x)], na.rm=TRUE)
StepsPerDay <- append(StepsPerDay, total)
}
hist(StepsPerDay)
hist(StepsPerDay, xlab="Number of Steps Per Day")
hist(StepsPerDay, xlab="Number of steps per day", main="Histogram of steps per day")
rm(list=ls())
?as.Date
?plot
```
data <- read.csv("activity.csv")
data$date <- as.Date(data$date)
head(data)
tail(data)
unique(interval)
unique(data$interval)
length(unique(data$interval))
intervals <- unique(data$interval)
MeanIntervals <- NULL
for (x in intervals) {
avg <- mean(data$steps[which(data$steps==x), na.rm=TRUE])
MeanIntervals <- append(MeanIntervals, avg)
}
for (x in intervals) {
avg <- mean(data$steps[which(data$interval==x), na.rm=TRUE])
MeanIntervals <- append(MeanIntervals, avg)
}
mean(data$steps)
for (x in intervals) {
avg <- mean(data$steps[which(data$interval==x)], na.rm=TRUE)
MeanIntervals <- append(MeanIntervals, avg)
}
plot(data$interval, MeanIntervals, type="l")
plot(MeanIntervals, type="l")
plot(intervals,MeanIntervals, type="l")
Q2_df <- data.frame(interval=intervals, mean_steps=StepsPerInt)
intervals <- unique(data$interval)
StepsPerInt <- NULL
for (x in intervals) {
avg <- mean(data$steps[which(data$interval==x)], na.rm=TRUE)
StepsPerInt <- append(StepsPerInt, avg)
}
plot(intervals, StepsPerInt, type="l", xlab="Interval", ylab="Mean Steps", main="Daily Activity Pattern")
Q2_df <- data.frame(interval=intervals, mean_steps=StepsPerInt)
max(Q2_df$mean_steps)
Q2_df$interval(whichQ2df$mean_steps==max(Q2_df$mean_steps))
Q2_df[whichQ2df$mean_steps==max(Q2_df$mean_steps)]
Q2_df[which(Q2df$mean_steps==max(Q2_df$mean_steps))]
Q2_df[which(Q2_df$mean_steps==max(Q2_df$mean_steps))]
Q2_df[which(Q2_df$mean_steps==max(Q2_df$mean_steps)),]
Q2_df[which(Q2_df$mean_steps==max(Q2_df$mean_steps)),1]
na <- is.na(data)
comp <- complete.cases(data)
count(comp)
length(comp)
sum(comp)
length(data)-comp
length(data)-sum(comp)
sum(comp)
length(data)
length(data$interval)
?na.replace
??na.replace
summarise(data)
summary(data)
new_df <- data
head(Q2_df)
head(new_df)
new_df[1,]
Q2_df[which(Q2_df$interval==50),2]
for (i in length(new_df$steps)) {
int <- new_df$interval[i]
if is.na(new_df$steps[i]) {
new_df$steps[i] <- Q2_df[which(Q2_df$interval==int)]
}
}
complete_data <- data
rm(new_df)
for (i in length(complete_data$steps)) {
int <- complete_data$interval[i]
if is.na(complete_data$steps[i]) {
for (i in length(complete_data$steps)) {
int <- complete_data$interval[i]
if (is.na(complete_data$steps[i])) {
complete_data$steps[i] <- Q2_df[which(Q2_df$interval==int)]
}
}
head(Q2_df)
for (i in length(complete_data$steps)) {
int <- complete_data$interval[i]
if (is.na(complete_data$steps[i])) {
complete_data$steps[i] <- Q2_df[which(Q2_df$interval==int),2]
}
}
head(complete_data)
summary(complete_data)
summary(Data)
summary(data)
for (i in data$steps)) {
int <- complete_data$interval[i]
for (i in data$steps) {
int <- complete_data$interval[i]
if (is.na(complete_data$steps[i])) {
complete_data$steps[i] <- Q2_df[which(Q2_df$interval==int),2]
}
}
summary(complete_data)
Q2_df[which(Q2_df$interval==55),2]
length(Q2_df[which(Q2_df$interval==55),2])
for (i in data$steps) {
int <- complete_data$interval[i]
if (is.na(complete_data$steps[i])) {
complete_data$steps[i] <- Q2_df[which(Q2_df$interval==int),2]
}
print(int)
}
for (i in data$steps) {
int <- complete_data$interval[i]
if (is.na(complete_data$steps[i])) {
#complete_data$steps[i] <- Q2_df[which(Q2_df$interval==int),2]
print(int)
}
}
head(complete_data)
complete_data$interval[1]
complete_data$interval[2]
?seq_along
for (i in seq_along(length(c(11,2,3,4,5,NA)))){
print i
}
for (i in seq_along(length(c(11,2,3,4,5,NA)))){
print(i)
}
length(c(11,2,3,4,5,NA))
seq_along(6)
list <- c(1,2,4,5,7,3,4,5,6,7,7,2,3)
seq_along(list)
for (i in seq_along(data$steps)) {
int <- complete_data$interval[i]
if (is.na(complete_data$steps[i])) {
#complete_data$steps[i] <- Q2_df[which(Q2_df$interval==int),2]
print(int)
}
}
complete_data <- data
for (i in seq_along(data$steps)) {
int <- complete_data$interval[i]
if (is.na(complete_data$steps[i])) {
complete_data$steps[i] <- Q2_df[which(Q2_df$interval==int),2]
}
}
head(complete_data)
summary(complete_data)
summary_data
summary(data)
?weekday
?weekdays
complete_data$weekdays <- weekdays(date)
complete_data$weekdays <- weekdays(complete_data$date)
head(complete_data)
a <- "Tuesday"
ls <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
if (a %in% ls){
print("yep")
}
a <- "Sunday"
if (a %in% ls){
print("yep")
}
else {
print("nope")
}
for (x in seq_along(complete_data$date)) {
day <- weekdays(complete_Data$date[x])
weekdays <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
if (day %in% weekdays) {
complete_data$weekday[x] <- "weekday"
}
else {
complete_data$weekday[x] <- "weekend"
}
}
for (x in seq_along(complete_data$date)) {
day <- weekdays(complete_data$date[x])
weekdays <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
if (day %in% weekdays) {
complete_data$weekday[x] <- "weekday"
}
else {
complete_data$weekday[x] <- "weekend"
}
}
```
head(complete_data)
summary(complete_data)
head(complete_data)
?type
complete_data$weekday <- as.factor(complete_data$weekday)
str(complete_data)
?panelplot
??panelplot
library(lattice)
intervals2 <- unique(complete_data$interval)
StepsPerInt2 <- NULL
for (x in intervals2) {
View(complete_data)
View(complete_data)
?rbind
weekday_steps <- NULL
weekend_steps <- NULL
for (x in intervals) {
avg_day <- mean(complete_data$steps[which(complete_data$interval==x
& complete_data$weekday="weekday")])
mean(complete_data$steps[which(complete_data$interval==45
& complete_data$weekday="weekday")])
for (x in intervals) {
avg_day <- mean(complete_data$steps[which(complete_data$interval==x
& complete_data$weekday=="weekday")])
avg_end <- mean(complete_data$steps[which(complete_data$interval==x
& complete_data$weekday=="weekend")])
weekday_steps <- append(weekday_steps, avg_day)
weekend_steps <- append(weekend_steps, avg_end)
}
weekday_df <- data.frame(interval=intervals, mean_steps=weekday_steps, day="weekday")
weekend_df <- data.frame(interval=intervals, mean_steps=weekend_steps, day="weekend")
Q4_df <- rbind(weekday_df, weekend_df)
View(weekday_df)
View(`Q4_df`)
library(lattice)
View(`Q4_df`)
library(lattice)
xplot(mean_steps ~ interval | day, data = Q4_df, layout = c(1,2))
xyplot(mean_steps ~ interval | day, data = Q4_df, layout = c(1,2))
xyplot(mean_steps ~ interval | day, data = Q4_df, layout = c(1,2), type="l")
xyplot(mean_steps ~ interval | day, data = Q4_df, layout = c(1,2), type="l", xlab="Mean Steps")
xyplot(mean_steps ~ interval | day, data = Q4_df, layout = c(1,2), type="l", ylab="Mean Steps")
,
View(complete_data)
for (interval in complete_data$intervals) {
complete_data$interval_time <- format(complete_data$interval,format="%H%M")
}
View(complete_data)
interval_time <- NULL
for (interval in complete_data$intervals) {
complete_data$interval_time <- format(interval,format="%H%M")
}
View(complete_data)
for (interval in complete_data$intervals) {
interval_time <- append(interval_time, format(interval,format="%H%M"))
}
for (interval in complete_data$intervals) {
interval_time <- append(interval_time, sprintf("%04d",interval)))
}
for (interval in complete_data$intervals) {
interval_time <- append(interval_time, sprintf("%04d",interval))
}
sprintf("%04d", 10)
complete_data$interval_time <- sprintf("%04d", complete_data$interval_time)
complete_data$interval_time <- sprintf("%04d", complete_data$interval)
View(complete_data)
complete_data$interval_time <- as.POSIXct(complete_data$interval_time, format="%H%M")
str(complete_data$interval_time)
View(complete_data)
?as.POSIXct
?DateTimeClasses
data$interval <- as.POSIXlt(data$interval, format="%H%M")
data$interval <- sprintf("%04d", data$interval)
data$interval <- as.POSIXct(data$interval, format="%H%M")
data$interval <- format(data$interval, format="$H:$M")
View(data)
rm(list=ls())
data <- read.csv("activity.csv")
data$date <- as.Date(data$date)
data$interval <- sprintf("%04d", data$interval)
data$interval <- as.POSIXct(data$interval, format="%H%M")
View(data)
data$new_interval <- format(data$interval, format="%H:%M:%S")
View(data)
View(data)
data$interval <- sprintf("%04d", data$interval)
data$interval <- as.POSIXct(data$interval, format="%H%M")
data$interval <- format(data$interval, format="%H:%M:%S")
intervals <- unique(data$interval)
data$interval <- format(data$interval, format="%H:%M:%S")
View(data)
data <- read.csv("activity.csv")
data$date <- as.Date(data$date)
data$interval <- sprintf("%04d", data$interval)
head(data)
data$interval <- as.POSIXct(data$interval, format="%H%M")
head(data)
data$interval <- format(data$interval, format="%H:%M:%S")
head(data)
intervals <- unique(data$interval)
StepsPerInt <- NULL
for (x in intervals) {
avg <- mean(data$steps[which(data$interval==x)], na.rm=TRUE)
StepsPerInt <- append(StepsPerInt, avg)
}
plot(intervals, StepsPerInt, type="l", xlab="Time", ylab="Mean Steps", main="Daily Activity Pattern")
Q2_df <- data.frame(interval=intervals, mean_steps=StepsPerInt)
plot(Q2_df$interval, Q2_df$mean_steps)
plot(Q2_df$interval, Q2_df$mean_steps, type="l", xlab="Time", ylab="Mean Steps", main="Daily Activity Pattern")
View(data)
data <- read.csv("activity.csv")
data$interval <- sprintf("%04d", data$interval)
intervals <- unique(data$interval)
StepsPerInt <- NULL
for (x in intervals) {
avg <- mean(data$steps[which(data$interval==x)], na.rm=TRUE)
StepsPerInt <- append(StepsPerInt, avg)
}
Q2_df <- data.frame(interval=intervals, mean_steps=StepsPerInt)
plot(Q2_df$interval, Q2_df$mean_steps, type="n", xlab="Time", ylab="Mean Steps", main="Daily Activity Pattern")
plot(Q2_df$interval, Q2_df$mean_steps, type="l", xlab="Time", ylab="Mean Steps", main="Daily Activity Pattern")
int_max <- Q2_df[which(Q2_df$mean_steps==max(Q2_df$mean_steps)),1]
max_mean <- round(Q2_df[which(Q2_df$mean_steps==max(Q2_df$mean_steps)),2], digits=2)
weekday_steps <- NULL
weekend_steps <- NULL
for (x in intervals) {
avg_day <- mean(complete_data$steps[which(complete_data$interval==x
& complete_data$weekday=="weekday")])
avg_end <- mean(complete_data$steps[which(complete_data$interval==x
& complete_data$weekday=="weekend")])
weekday_steps <- append(weekday_steps, avg_day)
weekend_steps <- append(weekend_steps, avg_end)
}
weekday_df <- data.frame(interval=intervals, mean_steps=weekday_steps, day="weekday")
install.packages("ggplot2")
knit2html("PA1_template.Rmd")
library(knitr)
knit2html("PA1_template.Rmd")
